// Minimum number of moves to reach N starting from ( 1 , 1 ). 
 #include <bits/stdc++.h> 
 using namespace std ;
 int min_moves ( int n ) {
 
    // Base case
    if ( n == 1 )
        return 0 ;
 
    // If N is odd, then N = 2*k + 1
    // where k is some integer
    if ( n % 2 == 1 )
        return min_moves ( n - 1 ) + 1 ;
 
    // If N is even, then N = 2*k
    // where k is some integer
    return min_moves ( n / 2 ) + 1 ;
 }
 
 // Driver program to test above function
 int main () {
    int n ;
    cin >> n ;
    cout << min_moves ( n ) << endl ;
    return 0 ;
 }




































































































































































































































































































